{
    "basePath": "http://pointflow.point.io",
    "apiVersion": "2.0",
    "swaggerVersion": "1.1",
    "resourcePath": "/",
    "apis": [
        {
            "path": "/auth",
            "operations": [
                {
                    "httpMethod": "POST",
                    "summary": "Authentication",
                    "notes": "The first call authenticates an existing Point.io user to use an existing Point.io app. Use the value of SESSIONKEY value to perform all following API calls.",
                    "dataType": "void",
                    "nickname": "nickname",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "email",
                            "description": "Valid Point.io account username (email address)",
                            "required": true,
                            "dataType": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "password",
                            "description": "Point.io account password",
                            "required": true,
                            "dataType": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "apikey",
                            "description": "App ID of your Point.io application. See point.io/account for info.",
                            "required": true,
                            "dataType": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Bad Request"
                        },
                        {
                            "code": 401,
                            "message": "Login Failed"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/processtypes/{processtypeid}",
            "operations": [
                {
                    "httpMethod": "GET",
                    "summary": "Get process type details",
                    "notes": "output XML-encoded BPMN2.0",
                    "dataType": "void",
                    "nickname": "nickname",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "processtypeid",
                            "description": "ID of the processtype to fetch",
                            "required": true,
                            "dataType": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "Authorization",
                            "description": "SESSIONKEY value provided by the /auth method.",
                            "required": true,
                            "dataType": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Not authorized to perform this action."
                        },
                        {
                            "code": 404,
                            "message": "Process type not found"
                        },
                        {
                            "code": 500,
                            "message": "Error completing action"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/processes/{name}",
            "operations": [
                {
                    "httpMethod": "POST",
                    "summary": "Create (start) new process",
                    "notes": "instantiates a process that does not have required starting variables",
                    "dataType": "void",
                    "nickname": "nickname",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Name of the process to fetch",
                            "required": true,
                            "dataType": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "body",
                            "description": "empty for now",
                            "required": true,
                            "dataType": "Order",
                            "paramType": "body"
                        },
                        {
                            "name": "Authorization",
                            "description": "SESSIONKEY value provided by the /auth method.",
                            "required": true,
                            "dataType": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Not authorized to perform this action."
                        },
                        {
                            "code": 404,
                            "message": "Process not found"
                        },
                        {
                            "code": 500,
                            "message": "Error completing action"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/tasks/{taskid}",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "summary": "Complete task",
                    "notes": "",
                    "type": "void",
                    "nickname": "nickname",
                    "authorizations": {},
                    "parameters": [
                        {
                            "name": "taskId",
                            "description": "ID of the task to complete",
                            "required": true,
                            "dataType": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "body",
                            "description": "Input JSON structure",
                            "required": true,
                            "dataType": "Order",
                            "paramType": "body"
                        },
                        {
                            "name": "Authorization",
                            "description": "SESSIONKEY value provided by the /auth method.",
                            "required": true,
                            "dataType": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 403,
                            "message": "Not authorized to perform this action."
                        },
                        {
                            "code": 404,
                            "message": "Task not found"
                        },
                        {
                            "code": 500,
                            "message": "Error completing action"
                        }
                    ]
                }
            ]
        }
    ],
    "models": {
        "Result": {
            "properties": {
                "ERROR": {
                    "type": "int",
                    "description": "1 for Error, 0 for success"
                },
                "MESSAGE": {
                    "type": "string",
                    "description": "If an error occured, this will be provided with a description of the error"
                },
                "RESULT": {
                    "type": "string"
                }
            },
            "id": "Result"
        },
        "Error": {
            "properties": {
                "ERROR": {
                    "type": "int",
                    "description": "1 for Error, 0 for success"
                },
                "MESSAGE": {
                    "type": "string",
                    "description": "If an error occured, this will be provided with a description of the error"
                }
            },
            "id": "Error"
        },
        "VariableResult": {
            "properties": {
                "ERROR": {
                    "type": "int",
                    "description": "1 for Error, 0 for success"
                },
                "MESSAGE": {
                    "type": "string",
                    "description": "If an error occured, this will be provided with a description of the error"
                },
                "RESULT": {
                    "type": "ColData"
                }
            },
            "id": "VariableResult"
        },
        "ColData": {
            "properties": {
                "COLUMNS": {
                    "type": "List",
                    "description": "An Array of strings containing labels for RESULT.DATA array indices"
                },
                "DATA": {
                    "type": "List",
                    "description": "A List of Lists containing data fields. The data field labels are described in RESULT.COLUMNS."
                }
            },
            "id": "ColData"
        }
    },
    "description": ""
}